---
# tasks file for containerlab

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ ansible_host }}"
  become: yes

- name: Add Ansible Automation Platform subscription pool
  community.general.redhat_subscription:
    state: present
    username: "{{ rhn_user }}"
    password: "{{ rhn_pass }}"
    pool_ids:
      - "{{ rhn_pool_id }}"
  become: yes

- name: Install RPM dependencies
  ansible.builtin.dnf:
    name:
      - podman
      - podman-docker
      - git
      - python3
      - python3-pip
      - curl
      - ansible-core
      - ansible-test
  become: yes
  ignore_errors: yes

- name: Clear cache
  command: dnf clean all -y
  become: yes

- name: Install RPM dependencies
  ansible.builtin.dnf:
    name:
      - podman
      - podman-docker
      - git
      - python3
      - python3-pip
      - curl
      - ansible-core
      - ansible-test
  become: yes

- name: Install pip3 dependency
  ansible.builtin.pip:
    name:
      - ansible-pylibssh
      - ansible-lint
  become: yes

- name: Enable podman service
  ansible.builtin.service:
    name:
      podman.socket
    state: started
    enabled: true
  become: yes

- name: Check for containerlab installation
  ansible.builtin.stat:
    path: /usr/bin/containerlab
  register: c_install
  ignore_errors: yes

- block:
  - name: Install containerlab
    ansible.builtin.shell: bash -c "$(curl -sL https://get.containerlab.dev)"
    become: yes

  - name: Containerlab relabling
    ansible.builtin.command: semanage fcontext -a -t textrel_shlib_t /usr/bin/containerlab
    become: yes

  - name: Containerlab restorecon
    ansible.builtin.command: restorecon /usr/bin/containerlab
    become: yes
  when: c_install.stat.exists is false

- name: Create student user
  ansible.builtin.user: 
    name: student
    password: "{{ student_pass }}"
  become: yes

- name: Pre-install collections for student user
  ansible.builtin.unarchive:
    copy: true
    src: files/collections.tar.gz
    dest: /home/student/
    owner: student
    group: student
  become: yes

- name: Check for cloned repo
  ansible.builtin.stat:
    path: /home/student/advanced-networking-workshop
  register: git_cloned
  become: yes

- name: Clone advanced networking workshop git repo
  ansible.builtin.git:
    repo: "https://github.com/mglantz/advanced-networking-workshop"
    dest: /home/student/advanced-networking-workshop
    clone: yes
  become: yes
  when: git_cloned.stat.exists is false

- name: Change ownership of cloned repo
  ansible.builtin.command: "chown student:student /home/student/advanced-networking-workshop -R"
  become: yes

- name: Configure student sudoers rights
  ansible.builtin.copy:
    src: files/student
    dest: /etc/sudoers.d/student
    owner: root
    group: root
    mode: 0644
  become: yes

- name: Copy student bash_profile
  ansible.builtin.copy:
    src: files/bash_profile
    dest: /home/student/.bash_profile
    owner: student
    group: student
    mode: 0644
  become: yes

- name: Make .ssh directory for student user
  ansible.builtin.file:
    path: /home/student/.ssh
    state: directory
    owner: student
    group: student
    mode: 0700
  become: yes

- name: Put in-place the SSH key file for the student user
  copy:
    src: files/advanced-networking-workshop_id_rsa
    dest: /home/student/.ssh/advanced-networking-workshop_id_rsa
    owner: student
    group: student
    mode: 0400
  become: yes

- name: Copy Arista cEOS container file to systems
  ansible.builtin.copy:
    src: files/cEOS64-lab-4.32.0F.tar.tar
    dest: /home/student/cEOS64-lab-4.32.0F.tar.tar
    owner: student
    group: student
  become: yes

- name: Podman import on cEOS container file
  command: podman import /home/student/cEOS64-lab-4.32.0F.tar.tar ceos:4.32.0F
  become: yes
